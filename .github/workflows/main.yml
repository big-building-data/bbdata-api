name: Test and build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  #
  # run all the tests and upload test results
  #
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
      
    - name: Create and run MySQL image
      run: |
        cd other/mysql
        ./docker-build.sh
        ./docker-start.sh
        cd ../..

    - name: Create and run Cassandra image
      run: |
        cd other/cassandra
        ./docker-build.sh
        ./docker-start.sh
        cd ../..
        
    - name: Docker ps
      run: docker ps
      
    - name: Run tests
      run: |
        export BB_NO_KAFKA=true
        ./gradlew test

    - name: Upload failed results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test_reports
        path: build/reports/tests


  deploy:
    #
    # on push to MASTER only, if the tests were successful
    # build the packages and update nightly release
    #
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Create executable jar
        run: ./gradlew bootJar

      - name: Upload executable jar
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: build/libs/*.*

      - name: Create info file
        run: |
          echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" > build/libs/info.txt

      - name: Update nightly release
        uses: eine/tip@master
        with:
          tag: nightly
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: build/libs/*.*