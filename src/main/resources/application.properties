## Embedded server
server.shutdown=graceful

## Actuator info endpoint
# NOTE: the /info actuator endpoint and the /about regular endpoint display exactly the same content.
#    hence, whatever you show in /info is also available publicly to anyone !
# version of the jar, as defined in build.gradle.kts
# note that for the variable to be expanded, a task "processResources" must be defined
info.build.version=${version}
# default "instance-name" displayed in the /info endpoint
info.instance-name=BBData Test Instance
info.repo-url=https://github.com/big-building-data/bbdata-api
# also show some properties in the /about endpoint
# (the values should refer to other existing properties, that will be expanded at runtime)
dynamic.info.clone-url=git.remote.origin.url
dynamic.info.cache-type=spring.cache.type
dynamic.info.active-profiles=spring.profiles.active
dynamic.info.async-enabled=async.enabled

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/bbdata2?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username = bbdata-admin
spring.datasource.password = bbdata

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Set MySQL timezone to UTC
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Allow registered types for joda-time (see https://blog.netgloo.com/2015/04/06/spring-boot-using-joda-time-on-jpa-entity-with-hibernate/)
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true
# Debug: show sql statements
spring.jpa.show-sql = false

## Cassandra properties
spring.data.cassandra.contact-points=127.0.0.1
spring.data.cassandra.keyspace-name=bbdata2
spring.data.cassandra.local-datacenter=datacenter1
# The following allows to shut up warnings "Spring Data Cassandra - Could not safely identify store assignment"
# For this to work ensure to set the below property, but ONLY if Cassandra enabled (ie. not NOC profile)
# @EnableCassandraRepositories(basePackages = ["ch.derlin.bbdata.common.cassandra"])
# if there is trouble, just remove it, it works as well
spring.data.cassandra.repositories.type=none

## Kafka properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.template.default-topic=bbdata2-augmented

## Caching
# to use redis, use spring.cache.type=redis and populate the redis properties as needed.
# to use in-memory maps, use spring.cache.type=simple
# to disable caching, use spring.cache.type=none
spring.cache.type=simple
# log cache operations
logging.level.org.springframework.cache=INFO
# do not enable redis repositories, as we don't have any (spring.cache.type=redis will still work though)
spring.data.redis.repositories.enabled=false
# default redis configuration
spring.redis.host=localhost
spring.redis.port=6379

## Async Task Execution
# set it to false if you don't want async (submitting values will become waaay slower !)
async.enabled=true
# according to the springboot source,
# https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/task/TaskExecutorBuilder.java#L279
# the default implementation uses ThreadPoolTaskExecutor under the hood. See the ThreadPoolTaskExecutor documentation.
# Main idea: when a task is submitted, the executor will first try to use a free thread if the number of active threads is
# currently less than the core size. If the core size has been reached, then the task will be added to the queue as long as
# its capacity has not yet been reached. Only then, if the queue's capacity has been reached, will the executor create a
# new thread beyond the core size. If the max size has also been reached, then the calling thread will handle the task (CallerRuns policy).
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=20
spring.task.execution.pool.keep-alive=120s
spring.task.execution.pool.queue-capacity=10
spring.task.execution.shutdown.await-termination=true
spring.task.execution.shutdown.await-termination-period=5m
spring.task.execution.thread-name-prefix=async-executor-
spring.task.execution.pool.allow-core-thread-timeout=false

## Exceptions
# log resolved exceptions
spring.mvc.log-resolved-exception=true

## Console output
spring.main.banner-mode=off 
spring.output.ansi.enabled=ALWAYS

## Input/Output
# make json the default
spring.data.rest.defaultMediaType=application/json
# pretty print output
spring.jackson.serialization.indent-output=true
# keep order of properties
spring.jackson.serialization.order-map-entries-by-keys=true
# dates (declared here only for swagger)
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss
# Pageable configuration
spring.data.web.pageable.max-page-size=1000000
spring.data.web.pageable.default-page-size=1000000

## Actuator (config)
# IMPORTANT: actuators may be dangerous, so ensure you run it on another port, that is only available to administrators !
# cache and tasks are custom actuators.
management.endpoints.web.exposure.include=info, health, metrics, tasks, loggers, mappings, caches
management.endpoint.health.show-components=always
#management.server.port=8111 TODO uncomment in production !!!!
management.endpoints.web.base-path=/

## Spring Boot Admin
# disabled by default. To use it, you need to:
#   - have an admin server running,
#   - set the property spring.boot.admin.client.enabled=true
#   - set the property spring.boot.admin.client.url=<URL OF THE ADMIN SERVER>
#   - change the property management.endpoints.web.exposure.include=*
spring.boot.admin.client.enabled=false
spring.boot.admin.client.auto-deregistration=true
spring.boot.admin.client.instance.name=BBData test Instance

## Documentation
# Paths: UI at /docs/api, yaml at /docs/api/bbdata{.yaml}
springdoc.swagger-ui.path=/docs/api
springdoc.api-docs.path=/docs/api/bbdata
# do not expand tags
springdoc.swagger-ui.doc-expansion=none
# sort tags alphabetically
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
# show actuator endpoints
springdoc.show-actuator=true
# hide the "basic-error-controller" tag in interface
springdoc.paths-to-exclude=/error